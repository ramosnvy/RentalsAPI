// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Rentals.Infrastructure;

#nullable disable

namespace Rentals.Infrastructure.Migrations
{
    [DbContext(typeof(RentalsDbContext))]
    partial class RentalsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Rentals.Domain.Drivers.DeliveryDriver", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("delivery_drivers", (string)null);
                });

            modelBuilder.Entity("Rentals.Domain.Drivers.DeliveryDriver", b =>
                {
                    b.OwnsOne("Rentals.Domain.Drivers.Cnh", "Cnh", b1 =>
                        {
                            b1.Property<Guid>("DeliveryDriverId")
                                .HasColumnType("uuid");

                            b1.Property<int>("CnhCategory")
                                .HasColumnType("integer")
                                .HasColumnName("cnh_category");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("cnh_number");

                            b1.HasKey("DeliveryDriverId");

                            b1.ToTable("delivery_drivers");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryDriverId");
                        });

                    b.OwnsOne("Rentals.Domain.Drivers.CnhImage", "CnhImage", b1 =>
                        {
                            b1.Property<Guid>("DeliveryDriverId")
                                .HasColumnType("uuid");

                            b1.Property<string>("BlobPath")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("cnh_image_file");

                            b1.Property<string>("ContentType")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasColumnName("cnh_image_type");

                            b1.HasKey("DeliveryDriverId");

                            b1.ToTable("delivery_drivers");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryDriverId");
                        });

                    b.OwnsOne("Rentals.Domain.Drivers.Cnpj", "Cnpj", b1 =>
                        {
                            b1.Property<Guid>("DeliveryDriverId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(14)
                                .HasColumnType("character varying(14)")
                                .HasColumnName("cnpj");

                            b1.HasKey("DeliveryDriverId");

                            b1.ToTable("delivery_drivers");

                            b1.WithOwner()
                                .HasForeignKey("DeliveryDriverId");
                        });

                    b.Navigation("Cnh")
                        .IsRequired();

                    b.Navigation("CnhImage");

                    b.Navigation("Cnpj")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
